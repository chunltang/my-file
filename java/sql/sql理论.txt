1.触发器的作用

  触发器是一种特殊的存储过程，主要是通过事件来触发执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化，可以联级运算，如 
某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发


2.什么是存储过程，用什么来调用

  存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需要创建一次，以后在该程序中可以调用多次。若果某次操作需要执行多次SQL，使用存储过程比单纯SQL语句执行要快
  
  调用：a.可以使用一个命令对象来调用存储过程   b.可以供外部程序调用，比如java程序 c.在一个存储过程中可以调用另一个存储过程，但是不能删除另一个存储过程
  
  语法：create procedure name() begin ... end
  调用：call name()
  
  
  
3.存储过程的优缺点

  优点：a.存储过程是预编译过的，执行效率高   b.存储过程的代码直接存放于数据库中，通过存储过程名直接调用，减少网路通讯
  
        c.安全性高，执行存储过程需要一定权限的用户   d.存储过程可以重复使用，可减少数据库开发人员的工作量
		
  缺点：可移植性差
  
  
4.存储过程和函数的区别


5.索引的作用和它的优缺点是什么

  索引是一种特特殊的查询表，数据库的搜索可以利用它加速对数据的检索，类似书的目录，不需要查询整本书内容就可以找到想要的数据，所以可以是唯一的，创建索引允许指定单个列或者多个列
  
  缺点是：它减慢了数据插入的速度，同时也增加了数据库的尺寸大小
  
  
6.什么样的字段适合建索引

  唯一、不为空、经常被查询的字段
  

7.索引的类型有哪些

  单行、多行、唯一、非唯一、函数索引、分区索引、正常型B树、反转性B树、Bitmap位图索引
  
 
8.什么是事务、什么是索引

  事务就是被绑定在一起作为一个逻辑工作单元的SQL语句分组，若果任何一个语句执行失败，那么整个操作就执行失败，以后操作会回滚到操作之前的状态，或者是上个节点上，为可确保要么执行，
要么不执行，就额可以使用事务。

  要将几组语句作为事务考虑，就需要通过ACID测试，即原子性、一致性、隔离性和持久性。
  
  锁：在所有的DBMS中，锁是实现事务的关键，锁可以保证事务的完整性和并发性，它可以使某些数据的拥有者，在某段时间内不能用某些数据或者数据结构。锁还是分级别的
  
  
9.什么是视图，游标是什么

  视图：是一种虚拟的表，具有和物理表相同的功能。可以对视图进行建立和删除操作，视图通常是一个表或者多个表的行或列的子集，对视图的修改会影响基本表，它使得我们获取数据更容易，
相比多表查询。在数据库中存放的是视图的定义(SELECT SQL语句),不存放数据，它的数据还是在原来的表中。

  游标：是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元中的特定行，从结果集的当前行索引一行或多行，可以对结果集当前行做修改，一般不使用游标，但是需要逐条处理数据
的时候，游标显得十分重要。

  视图是已编译好的sql语句，而表不是；视图没有实际物理记录，而表有；表时内容，视图是窗口；表只用物理空间而视图不占物理空间；一个视图可以对应一个至多个基本表；
  
  视图是一个子查询，性能比直接查询要低，使用视图最好不要嵌套使用查询。
  
  表的索引对视图无效，它是全表扫描的
  
  视图的作用：
    当一个查询你需要频繁的使用时，视图可以简化代码，直接调用而不是每次都去重写这个东西，像高级语言中的封装；
	当你只想让其他人查看表的数据做限制时，可以值给他查看该数据的视图；对数据进行保护


10.视图的优缺点

  有点：a.对数据库的访问，因为视图可以有选择性的选取数据库里的一部分 
  
        b.用户通过简单的查询操作可以从复杂查询中得到结果
		
		c.维护数据的独立性，视图可从多个表检索数据
		
		d.对于相同的数据可以产生不同的视图
		
  缺点：查询视图时，必须把视图的查询转化成对基本表的查询，若果这个视图是一个复杂的多表查询所定义，那么就无法更改数据
  
  
11.表连接的方式和区别

  内连接、自连接、外连接(左、右、全),交叉连接
  
  内连接：只有两个表元素相匹配的才能在结果集中显示
  
  左外连接：左边为驱动表，驱动表的数据全部显示，匹配表中不匹配的不会显示
  
  右外连接：右边为驱动表，驱动表的数据全部显示，匹配表中不匹配的不会显示
  
  全外连接：连接表中不匹配的数据全部显示出来
  
  交叉连接：笛卡尔效应，显示的结果是连接表数的乘积
  
  
12.主键和外键的区别

  主键在本表中时唯一的、不可为空的，外键可以重复可以为空；外键和另一张表的主键关联，不能创建对应表中不存在的外键
  
  
13.在数据库中查询语句很慢，如何优化

  1.创建索引
  
  2.减少表之间的关联
  
  3.优化sql，尽量让sql很快定位数据，不要让sql做全表查询，应该走索引，把数据量大的表排在前面
  
  4.简化查询字段，没用的字段不要，对返回结果进行控制，尽量返回少量数据
  
  5.尽量使用预编译SQL来查询
  
  
14.union和union all的不同

  UNION在进行表连接后会自动筛选掉重复记录，所以在表连接后会对所产生的结果集进行排序运算，删除重复的记录再返回结果
  
  UNION ALL只是简单的将两个结果合并后就返回，UNION ALL比UNION快得多
  
  
15.语句类型

  DDL,DML.DCL
  
  DDL：数据定义语言，包括create，drop，alter，truncate
  
  DML：数据操作语言，insert，delete，update
  
  DCL: 数据库控制语言，grant，revoke(可以废除某用户或某组或所有用户访问权限)
  
  
16.commit在哪里会运用

  commit，在为提交前，你前面的操作更新的都是内存，没有更新到物理表中，执行commit从用户角度讲就是更新到了物理文件
  
 
17.行转列、列转行

  使用decode或者case when
  
  
18.序列的作用

  oracle使用序列来生成唯一编号，用来处理一个表中的自增字段
  

18.视图其实就是一条查询sql语句，用于显示一个或多个表或其他视图中的相关数据，表就是惯性数据库中实际存储数据用的


20.truncate与delete的区别

  都是删除表中的全部行，使用truncate比delete删除速度快，且使用系统和事务日志资源少，delete每删除一行，在事务日志中未删除行记录一项
  
  truncate通过释放存储表数据所用的数据页来删除数据，并且只在事务日志中记录页的释放
  
  truncate：删除内容，释放空间但不删除定义
  
  delete：删除内容不删除第一，不释放空间
  
  drop table：删除内容和定义，释放空间
  
  




  
 

  

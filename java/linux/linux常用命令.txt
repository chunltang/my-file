1.文档查询工具cheat.sh
涵盖55中编程语言，多种BDMS以及1000多种最重要的NUIX和Linux命令，随时可用
再有外网的情况下，命令行输入:curl cheat.sh/tar 即可查到tar命令的介绍及使用

修改root密码：echo 123456|passwd --stdin root  ##echo 密码|passwd --stdin 用户名

********************************************************************************************************************************

1.ssh

简单说，SSH是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。

最基本的用法：

常用格式：ssh [-l login_name] [-p port] [user@]hostname

ssh 192.168.1.110
ssh -l root 192.168.0.11

# 比较常用 
ssh root@192.168.0.11

********************************************************************************************************************************

2.scp

scp命令用于Linux服务器之间复制文件和目录。scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。

最基本的用法：

常用格式：scp [可选参数] file_source remote_username@remote_ip:remote_folder

例子：

scp /home/test.log root@192.168.1.110:/home/happy/
注意: 使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的。

********************************************************************************************************************************

3.查看系统状态 top、free、df，du

top命令用于实时显示 process 的动态。可以配合用来查询vm的一些问题！
	
	# 表示更新两次后终止更新显示
	top -n 2
	#表示更新周期为3秒
	top -d 3
	# 显示进程号为2586的进程信息，CPU、内存占用率等
	top -p 2586
	更新显示二次的结果输入到名称为 top.log 的档案里
	top -n 2 -b < top.log
	
free命令用于显示内存状态

	# 显示内存使用信息 , -h 选项为根据大小适当显示(人类可以读懂的方式)
	free -h
	# 每10s 执行一次命令
	free -hs 10

df 以磁盘分区为单位查看文件系统，可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息

	# 查看磁盘信息， -h 选项为根据大小适当显示
	df -h
	
du会显示指定的目录或文件所占用的磁盘空间。用于查看当前目录的总大小

	# 通过排序的方式显示前十条
	du -am  | sort -nr | head -n 10
	
	各个目录占用磁盘空间的大小
	du -lh --max-depth=1  #--max-depth=<目录层数> 超过指定层数的目录后予以忽略
	
********************************************************************************************************************************
	
4.压缩/解压tar命令

tar是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文

	压缩文件
	命令 ： tar -zcvf 备份文件.tar.gz 备份文件/目录 后缀也可以是.tgz
	tar -zcvf text.tar.gz text.log
	
	列出压缩文件内容
    命令： tar -ztvf 备份文件.tar.gz 或 tar -ztvf 备份文件.tgz
	tar -ztvf text.tar.gz
	
	解压文件
    命令： tar -zxvf 备份文件.tar.gz 或 tar -zxvf 备份文件.tgz
	
	tar -z 压缩（c）、查看（t）、解压（x）vf
	-z或--gzip或--ungzip 通过gzip指令处理备份文件
	-c或--create 建立新的备份文件
	-t或--list 列出备份文件的内容
	-x或--extract或--get 从备份文件中还原文件
	-v或--verbose 显示指令执行过程
	-f<备份文件>或--file=<备份文件> 指定备份文件
	
	
********************************************************************************************************************************
	
5.修改文件属性chmod命令

Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用
读，写，执行的权限。r=4，w=2，x=1

********************************************************************************************************************************

6.查找文件find命令

	find . -iname \*.txt(大小写都匹配)
	find . -type d(当前目录下的所有子目录)
	find /usr -type l(当前目录下所有的符号链接)
	find /usr -type l -name "z*" -ls(符号链接的详细信息 eg:inode,目录)
	find /home/test -size +250000k(超过250000k的文件，当然+改成-就是小于了)
	find /home/test f -perm 777 -exec ls -l {} \; (按照权限查询文件)
	find /home/test -atime -1  1天内访问过的文件
	find /home/test -ctime -1  1天内状态改变过的文件    
	find /home/test -mtime -1  1天内修改过的文件
	find /home/test -amin -1  1分钟内访问过的文件
	find /home/test -cmin -1  1分钟内状态改变过的文件    
	find /home/test -mmin -1  1分钟内修改过的文件
	#----------
	#查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们
	find /var/log -type f -mtime +7 -ok rm {} \;

	#查找系统中所有文件长度为0的普通文件，并列出它们的完整路径
	find / -type f -size 0 -exec ls -l {} \;
	
	匹配模糊路径查找：
	find /* -type d -name "*conf*"
	
	#查找文件的三种方式
	whereis 查找特定文件夹 
	find 全盘 
	locate 查数据库

********************************************************************************************************************************
	
7.查询字符 grep命令

grep命令用于查找文件里符合条件的字符串。
grep指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设grep指令会把含有范本样式的那一列显示出来。

	# 显示所有以d开头的文件中包含test的行。
	grep 'test' d* 
	# 显示在text1，text2，text3文件中匹配test的行。
	grep 'test' text1 text2 text3
	# text文件中显示所有包含每个字符串至少有5个连续小写字符的字符串的行。
	grep '[a-z]\{5\}' text

	# 查找文件名中包含 test 的文件中不包含test 的行
	grep -v test *test*

********************************************************************************************************************************	

8.查看端口占用netstat命令

	netstat命令用于显示网络状态。

	利用netstat指令可让你得知整个Linux系统的网络情况。

	# 查看端口1212的使用情况
	netstat -tln | grep 1212 
	netstat -tupln 
	查看端口对应的应用程序
	lsof -i :1212
	
	netstat -anp | grep 2181 查看端口
                
               netstat -tlpn

               service --status-all  #查看服务列表

********************************************************************************************************************************	
	
9.查看文件内容 tail命令

tail 命令可用于查看文件的内容，有一个常用的参数 -f 常用于查阅正在改变的日志文件。

	tail -f filename 会把 filename 文件里的最尾部的内容显示在屏幕上，并且不断刷新，只要 filename 更新就可以看到最新的文件内容。
	# 查看日志
	tail -f  xxxx.out
	# 查看 100行日志
	tail  -n100 xxxx.out
	# 查看带有'test'的日志
	tail -f | grep 'test' 这样可以只显示

********************************************************************************************************************************

10.停止应用kill命令

kill命令用于删除执行中的程序或工作
# 查找tomcat服务器
ps aux | grep tomcat
root  25689
# 杀掉进程 -9 强制杀
kill -9 25689


11.ps命令，将某个进程显示出来

   ps-ef
   ps -aux

********************************************************************************************************************************   
   
12.mkdir|touch

mkdir命令用于建立名称为 dirName 之子目录
touch命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件

创建一个奇幻目录，也可以一次性创建多个。或者多级

	# 创建一个
	[root@localhost magic]# mkdir fantasy

	# 创建多个
	[root@localhost magic]# mkdir great best

	# 创建多级
	[root@localhost magic]# mkdir -p surprise/otherworld
	
	# 在fantasy 下创建一个文件
    touch happyday
	
	# 在fantasy 下创建多个文件
    touch sadday busyday

********************************************************************************************************************************	

13.cp拷贝

   cp 源文件  拷贝后的文件名
   
********************************************************************************************************************************

14.mv 改名

   mv copyf copyx
 
******************************************************************************************************************************** 
   
15.cat| more | less

	cat 命令用于连接文件并打印到标准输出设备上。

	more 命令类似 cat，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似）。

	less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件

********************************************************************************************************************************	

16.head | sort

	head命令 用来显示档案的开头至标准输出中。

	sort命令用于将文本文件内容加以排序。sort可针对文本文件的内容，以行为单位来排序。
	
	# 查看前5行内容 -n  num：显示每个文件的前num 行内容
    head -n 5 besthappyday 
	
	# 排序一下
    head -n 5 besthappyday | sort

********************************************************************************************************************************	
	
17.zgrep | zcat

避免解压文件，可以使用zgrep命令查找文件内容信息、zcat查看压缩文件中的信息

	# 查看 压缩文件内容 
	zcat -a besthappyday.tar.gz 
	# 查找 压缩文件中的内容
	zgrep -a "0201" besthappyday.tar.gz

********************************************************************************************************************************	
	
18. rm 删除命令

	-i 删除前逐一询问确认。
	-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。
	-r 将目录及以下之档案亦逐一删除。
	注： 如果不能使用 ll，可以进行配置（临时）：alias ll='ls -l --color=auto' ，如果想服务重启后还生效要改配置文件

********************************************************************************************************************************

19.ifconfig | ping | telnet

	ifconfig命令用于显示或设置网络设备。ifconfig可设置网络设备的状态，或是显示目前的设置,可用于启动关闭指定网卡、配置IP地址等。
	ping命令用于检测主机。执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常
	telnet命令用于远端登入。执行telnet指令开启终端机阶段作业，并登入远端主机

	ifconfig
	ping www.google.com
	ping 12.15.5.172
	telnet 192.168.1.120 8080

********************************************************************************************************************************	
	
20.ps |crontab

	ps命令用于显示当前进程 (process) 的状态。
	# 查询java服务
	ps -aux | grep java
	ps -aux | grep tomcat
	crontab是用来定期执行程序的命令。当安装完成操作系统之后，默认便会启动此任务调度命令。
	crontab 是用来让使用者在固定时间或固定间隔执行程序之用，换句话说，也就是类似使用者的时程表。
	crontab的使用这里略，感兴趣的请自行查找资料
	f1 f2 f3 f4 f5 :f1是表示分钟，f2表示小时，f3表示一个月中的第几日，f4表示月份，f5表示一个星期中的第几天   当f1为*时，表示每分钟都要执行，f1为a-b时表示从第a分钟到b分钟这段时间内要执行，当f1为*/n时，表示每n分钟个时间间隔执行一次，当f1为
	a,b,c...时表示第a,b,c...分钟要执行

********************************************************************************************************************************	
	
21.su | man

	su命令用于变更为其他使用者的身份，除 root 外，需要键入该使用者的密码。
	使用权限：所有使用者

	# 显示当前用户
	whoami 
	# 切换到root用户
	 su - root 
	密码： 

********************************************************************************************************************************	
	
22.文本过滤器-grep

在grep命令中输入字符串参数时，最好将其用双引号括起来。调用变量时也可以使用双引号。在调用模式匹配事，应使用单引号。

常用命令格式

	grep命令用于查找文件里符合条件的字符串,是一种强大的文本搜索工具，支持正则表达式或者字符及基本文本字符所编写的过滤条件
	# grep  匹配条件 目标文件/目录
	可选参数：
	-c 或 --count : 计算符合样式的列数。
	-i 或 --ignore-case : 忽略字符大小写的差别
	-l 或 --file-with-matches : 列出文件内容符合指定的样式的文件名称
	-n 或 --line-number : 在显示符合样式的那一行之前，标示出该行的列数编号
	-s ：不显示不存在或无匹配文本的错误信息。
	-v 或 --revert-match : 显示不包含匹配文本的所有行行
	-r 或 --recursive : 此参数的效果和指定"-d recurse"参数相同
	-E 或 --extended-regexp : 将样式为延伸的普通表示法来使用
	....

	说明：在正则表达式中
	^ ：匹配字符串开始
	$ ：匹配字符串结尾
	* ：字符出现 [0- 任意次 ]
	\?：字符出现 [0-1 次 ]
	\+：字符出现 [1- 任意次 ]
	
	# 2、查询 happy 所在的文件
    grep "happy" busyday*
	
	# 3、统计 happy 所在的文件内容的出现的次数
    grep -c "happy" busyday*
	
	# 4、显示匹配happy的所有行数，都在第三行
    grep -n "happy" busyday*
	
	# 5、显示所有不包含happy的行
    grep -v "happy" busyday*
	
	# 6、精确匹配，找到 123happy 
    grep "123happy" busyday*
	
	# 7、正则匹配，找到所有123开头的
    grep -E "^123*" busyday*

********************************************************************************************************************************	

23.字符处理器-sed

sed命令是利用script来处理文本文件。sed可依照script的指令，来处理、编辑文本文件。能够完美的配合正则表达式便用，功物能不同凡响

	sed  [-参数]  '命令'  文本

	参数说明：
	- -e<script>或--expression=<script> 以选项中指定的script来处理输入的文本文件。
	- -f<script文件>或--file=<script文件> 以选项中指定的script文件来处理输入的文本文件。
	- -h或--help 显示帮助。
	- -n或--quiet或--silent 仅显示script处理后的结果。
	- -V或--version 显示版本信息。
	动作说明：
	a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～
	c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
	d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
	i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；
	p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～
	s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦
	
	
	sed 's/要被取代的字串/新的字串/g'
	# 1、把aflyun用"java编程技术乐园"替换
	echo "aflyun0315" | sed 's/aflyun/java编程技术乐园/'
	
	指定输入流的哪一行被编辑，如果省略，默认是对所有行都进行编辑
	cat aflyun | sed '2s/aflyun/java编程技术乐园/'
	
	#替换所有行（没有地址，就是默认）
	cat aflyun | sed 's/aflyun/java编程技术乐园/'
	
	# 1、插入命令
    sed '2i java编程技术乐园' aflyun   #在第二行插入
	
	# 2、删除命令
    sed '2d' aflyun 
	
	#替换文件内容
    sed -i 's/aflyun/java编程技术乐园/g' 文件名 

********************************************************************************************************************************	
	
24.报告生成器-awk

	AWK是一种处理文本文件的语言，是一个强大的文本分析工具

	awk 处理机制 :awk 会逐行处理文本 , 支持在处理第一行之前做一些准备工作 , 以及在处理完最后一行做一些总结性质的工作 , 在命令格式上分别体现如下 :

	BEGIN{}: 读入第一行文本之前执行 , 一般用来初始化操作

	{}: 逐行处理 , 逐行读入文本执行相应的处理 , 是最常见的编辑指令块

	END{}: 处理完最后一行文本之后执行 , 一般用来输出处理结果

	常用 awk 内置变量

	变量名	说明
	$0	    当前记录
	$1~$n	当前记录的第n个字段
	FS	    输入字段分隔符，默认为换行符
	NF	    当前记录中的字段个数，就是有多少列
	NR	    已经读出的记录数，就是行号，从1开始
	OFS	    输入字段分隔符，默认也是空格
	ORS	    输出的记录分隔符，默认为换行符

	基本用法1
	awk '{[pattern] action}' {filenames}   # 行匹配语句 awk '' 只能用单引号
	# 每行按空格或TAB分割，输出文本中的2、4项
    awk '{print $1,$4}' happy.log 
	
	# 格式化输出
    awk '{printf "%-8s %-10s\n",$1,$4}' happy.log
	
	基本用法2
    awk -F  #-F相当于内置变量FS, 指定分割字符
	# 使用","分割
    awk -F, '{print $1,$2}'   happy.log 
	
	# 或者使用内建变量
    awk 'BEGIN{FS=","} {print $1,$2}'   happy.log 
	
	# 使用多个分隔符.先使用空格分割，然后对分割结果再使用","分割
    awk -F '[ ,]'  '{print $1,$2,$5}'   happy.log 
	
********************************************************************************************************************************

24.美元符号$的含义

  $0:shell的命令本身
  $1到$9：表示shell的第几个参数
  $#：传递到脚本的参数个数
  $*：以一个单子符串显示所有向脚本传递的参数
  $$:脚本运行的ID号
  $!:后台运行的最后一个进程的ID号
  $@与$*相同
  $-:显示shell使用的当前选项
  $?:显示最后命令的执行状况，0表示没有错误

********************************************************************************************************************************
	
25.常用命令实列：

1.查看行数

  tail -n -10 filename   最后10行
  tail -n +10 filename   第10行到最后一行
  sed -n '5,9p' filename 查看5至9行
  sed -n '/yes/p' redis.conf   查找有yes字符串的行
  cat -n redis.conf|sed -n '/yes/p'  查找有yes字符串的行及所在行数

2.统计文件行数

  wc -wcl filename  l为行数，c为字节数，w为单词数
  
3.查看最后一域并输入到文件

  ll | awk '{print $NF}' > filename
  
4.if的使用

  if [ $? -ne 0 ];then echo 'cd /abc'>filename.txt ;fi $?表示执行上一条命令返回的状态码，为0则为执行成功 
  
5.for的使用

  for i in `seq 10`; do echo  $i;done  `seq 10`生成1-10的序列
 
******************************************************************************************************************************** 
  
26.rpm命令

rpm2cpio jenkins-2.176.1-1.1.noarch.rpm | cpio -idmv 安装

********************************************************************************************************************************

27.centos安装gcc、make

centos通过yum -y install gcc make安装

在centos中使用yum list installed | grep docker 查看安装的相关软件

********************************************************************************************************************************

28.zip、unzip

zip -r mydata.zip mydata #压缩mydata目录

unzip mydata.zip -d mydatabak  #解压到mydatabak目录

********************************************************************************************************************************

29.nmcli

通过nmcli查看网络信息

nmcli connection show --active  显示所有活动网路连接

nmcli dev show | grep IP4.DNS   查看IP4.DNS

nmcli con mod ens33 ipv4.dns "114.114.114.114 8.8.8.8"  设置DNS服务器

********************************************************************************************************************************

30.centos网路桥接模式
设置为static静态，并设置ip与主机在同一网段，设置网关和主机一样，主机设置为手动ip方式
nmcli con mod ens33 ipv4.dns "114.114.114.114 8.8.8.8"  设置DNS服务器

********************************************************************************************************************************

31.xargs (菜鸟教程 https://www.runoob.com/linux/linux-comm-xargs.html)
xargs 是给命令传递参数的一个过滤器，也是组合多个命令的一个工具
xargs 可以将管道或标准输入（stdin）数据转换成命令行参数，也能够从文件的输出中读取数据。
xargs 也可以将单行或多行文本输入转换为其他格式，例如多行变单行，单行变多行。
xargs 默认的命令是 echo，这意味着通过管道传递给 xargs 的输入将会包含换行和空白，不过通过 xargs 的处理，换行和空白将被空格取代。
xargs 是一个强有力的命令，它能够捕获一个命令的输出，然后传递给另外一个命令。
之所以能用到这个命令，关键是由于很多命令不支持|管道来传递参数，而日常工作中有有这个必要，所以就有了 xargs 命令

-a file 从文件中读入作为sdtin 
-e flag ，注意有的时候可能会是-E，flag必须是一个以空格分隔的标志，当xargs分析到含有flag这个标志的时候就停止。
-p 当每次执行一个argument的时候询问一次用户。
-n num 后面加次数，表示命令在执行的时候一次用的argument的个数，默认是用所有的。
-t 表示先打印命令，然后再执行。
-i 或者是-I，这得看linux支持了，将xargs的每项名称，一般是一行一行赋值给 {}，可以用 {} 代替。
-r no-run-if-empty 当xargs的输入为空的时候则停止xargs，不用再去执行了。
-s num 命令行的最大字符数，指的是 xargs 后面那个命令的最大命令行字符数。
-L num 从标准输入一次读取 num 行送给 command 命令。
-l 同 -L。
-d delim 分隔符，默认的xargs分隔符是回车，argument的分隔符是空格，这里修改的是xargs的分隔符。
-x exit的意思，主要是配合-s使用。。
-P 修改最大的进程数，默认是1，为0时候为as many as it can ，这个例子我没有想到，应该平时都用不到的吧。

xargs 结合 find 使用:
用 rm 删除太多的文件时候，可能得到一个错误信息：/bin/rm Argument list too long. 用 xargs 去避免这个问题：
find . -type f -name "*.log" -print0 | xargs -0 rm -f

xargs -0 将 \0 作为定界符。
统计一个源代码目录中所有 php 文件的行数：
find . -type f -name "*.php" -print0 | xargs -0 wc -l

********************************************************************************************************************************

32.shell重定向（大于号，小于号，左右，2>&1，&）

https://www.cnblogs.com/atwanli/articles/5249542.html

********************************************************************************************************************************

33.命令实施
ls -lt /usr/mapfile | grep -E "sql|txt"  | head -n 1 |awk '{print $9}'  #获取指定目录下最新文件的文件名

********************************************************************************************************************************

33.iconv文件编码转换
file fileName  查看文件编码

iconv -f 原编码 -t 新编码 filename -o newfile
-f ：  from 来源编码
-t ：  to 转换后新编码
-c：   忽略无效字符
-s：   --silent，忽略警告
-o file ：  可选，没有的话直接转换当前文件， 使用-o 保留源文件。

列：
将utf8转为gbk
iconv -f utf8 -t gbk test -o test.gbk

********************************************************************************************************************************

快捷键：
ctrl+k  删除光标之后的内容
ctrl+w 删除光标之前的内容
ctrl+e 回到行尾
ctrl+a 回到行首
ctrl+s 关闭输入流
ctrl+q 退出ctrl+s

命令行参数：
    $0       脚本的名字
    $1       脚本后的第一串字符串
    $2       脚本后的第二串字符串
    $3       脚本后的第三串字符串
    $#       脚本后所跟字符的个数
    $*       脚本后跟的所有字符串，模式如“1 2 3 ……”
    $@     脚本后跟的所有字符串，模式如“1” “2” “3” ……

